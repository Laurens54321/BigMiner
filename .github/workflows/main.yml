name: Build apk
 
on:
  push:
    branches:
      - release
      
  workflow_dispatch:
env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  TARGETPLATFORM : Android
 
jobs:
  showMe: 
    name: Show Environment variables
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"
        
  build:
    name: Compile Project
    runs-on: ubuntu-latest
    steps:            
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
          
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ env.TARGETPLATFORM }}
          restore-keys: |
            Library-${{ env.TARGETPLATFORM }}
       
      # Build
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: ${{ env.TARGETPLATFORM }}
          versioning: Semantic     
      
      - name: Upload the artifact
        uses: actions/upload-artifact@v1
        with:
          name: Android.apk
          path: build/Android/Android.apk
      
  uploadApk:
    name: Upload .apk 
    runs-on: ubuntu-latest
    needs: build
    steps:
    
      - name: Bump version and push tag
        id: tag_bump
        uses: moble/github-tag-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: none
    
      - name: Create a GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: apk.${{ steps.tag_bump.outputs.tag }}.${{ github.run_number }}
          release_name: Release ${{ steps.tag_bump.outputs.tag }}
          body: ${{ steps.tag_bump.outputs.changelog }}

      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.8
       

      - name: Display structure of downloaded files
        run: ls -R

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_name: Android.apk
          asset_path: ./
          asset_content_type: application/vnd.android.ota





